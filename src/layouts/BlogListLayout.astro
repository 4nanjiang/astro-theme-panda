---
import Layout from '../layouts/Layout.astro'
import groupBy from 'lodash/groupBy'
import keys from 'lodash/keys'
import { slugifySpace } from '@utils/format'
import { parseSlug } from '@utils/file'
import { useLocale } from '@utils/locale'
import { formatDateMD } from '@utils/format'
const { path, t, locale } = useLocale(Astro.url)
let { title, tag, category } = Astro.props

// 如果没有传入标题，使用默认的导航标题
if (!title) {
    title = t('nav.posts')
}

const posts = Object.values(await import.meta.glob('../content/posts/**/*.{md,mdx}', { eager: true })).map((i) => {
    i.frontmatter['url'] = parseSlug(i.file) + '/'
    i.frontmatter['filepath'] = i.file
    return i.frontmatter
})

const filteredPosts = posts
    .filter((frontmatter) => {
        const isEnglish = frontmatter.filepath.includes('.en.md')
        const matchLanguage = locale === 'en' ? isEnglish : !isEnglish

        if (tag) {
            return !frontmatter.draft && frontmatter.tags && frontmatter.tags.includes(tag) && matchLanguage
        } else if (category) {
            return !frontmatter.draft && frontmatter.categories && frontmatter.categories.includes(category) && matchLanguage
        }
        return !frontmatter.draft && matchLanguage
    })
    .sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate))

const postsByYear = groupBy(filteredPosts, (frontmatter) => new Date(frontmatter.pubDate).getFullYear())
const result = keys(postsByYear)
    .map((key) => ({
        year: key,
        list: postsByYear[key].sort((a: any, b: any) => new Date(b.pubDate) - new Date(a.pubDate))
    }))
    .filter((i: any) => !isNaN(i.year))
    .reverse()

function getTitle(post) {
    if (!locale || locale === 'zh') return post.title
    const enTitle = post['title-en']
    if (!enTitle) return post.title
    return enTitle
}
---

<Layout title={title}>
    <main class="mt-8">
        {
            result.map((yearItem) => (
                <>
                    <div class="text-2xl font-bold italic my-3">{yearItem.year}</div>
                    <ul class="px-2">
                        {yearItem.list.map((post: any) => (
                            <li class={`flex transition-all duration-300 ${locale === 'en' ? 'mb-[0.55rem]' : 'my-1'}`}>
                                <span style={{ flex: '0 0 5rem' }}>
                                    <time class="mr-2">{formatDateMD(post.pubDate)}</time>
                                </span>
                                <a 
                                    rel="prefetch-intent" 
                                    href={path(post.url)} 
                                    class="panda-link-static"
                                >
                                    {getTitle(post)}
                                </a>
                            </li>
                        ))}
                    </ul>
                </>
            ))
        }
    </main>
</Layout>
